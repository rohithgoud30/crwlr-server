# Cloud Build configuration file for CI/CD deployment to Cloud Run
# Note: This project requires Python 3.11 for compatibility with cloud-sql-python-connector

steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA', '.']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '$_SERVICE_NAME'
      - '--image'
      - 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'
      - '--region'
      - 'us-east4'
      - '--platform'
      - 'managed'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '1'
      - '--timeout'
      - '3600s'
      - '--concurrency'
      - '80'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '100'
      - '--allow-unauthenticated'
      - '--service-account'
      - '${_SERVICE_ACCOUNT}'
      - '--set-env-vars'
      - 'PROJECT_ID=$PROJECT_ID,GEMINI_API_KEY=${_GEMINI_API_KEY},BRANCH_NAME=${BRANCH_NAME},ENVIRONMENT=production,FIREBASE_PROJECT_ID=${_FIREBASE_PROJECT_ID}'
      - '--startup-cpu-boost'
      - '--cpu-throttling'
      - '--port'
      - '8080'
      - '--startup-probe-path'
      - '/health'
      - '--startup-probe-initial-delay'
      - '60s'
      - '--container-command'
      - 'python'
      - '--container-arg'
      - '-u'
      - '--container-arg'
      - 'run.py'

  # Update the Cloud Run service to set API_KEY and Firebase secrets separately for better security
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        gcloud run services update $_SERVICE_NAME --platform managed --region us-east4 \
        --set-env-vars API_KEY=$${_API_KEY} \
        --set-env-vars FIREBASE_CLIENT_EMAIL=$${_FIREBASE_CLIENT_EMAIL} \
        --set-env-vars FIREBASE_PRIVATE_KEY="$${_FIREBASE_PRIVATE_KEY}"

  # Add tags for latest version
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'tag',
        'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA',
        'gcr.io/$PROJECT_ID/$_SERVICE_NAME:latest',
      ]
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:latest']

# Store images in Google Container Registry
images:
  - 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:latest'

# Set timeout for the build
timeout: 3600s

# Available secrets in Cloud Build
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/api-key/versions/latest
      env: '_API_KEY'
    - versionName: projects/$PROJECT_ID/secrets/gemini-api-key/versions/latest
      env: '_GEMINI_API_KEY'
    - versionName: projects/$PROJECT_ID/secrets/firebase-client-email/versions/latest
      env: '_FIREBASE_CLIENT_EMAIL'
    - versionName: projects/$PROJECT_ID/secrets/firebase-private-key/versions/latest
      env: '_FIREBASE_PRIVATE_KEY'
    - versionName: projects/$PROJECT_ID/secrets/firebase-project-id/versions/latest
      env: '_FIREBASE_PROJECT_ID'

substitutions:
  _COMMIT_SHA: ${_COMMIT_SHA}
  _SERVICE_ACCOUNT: ${_SERVICE_ACCOUNT}
  _SERVICE_NAME: crwlr-server # Default value, will be overridden when specified

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
